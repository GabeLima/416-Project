{"version":3,"sources":["api/index.js","auth/index.js","context/socket.js","config.js","components/Paint.js","components/CreateGame.js","components/LobbyCard.js","components/PlayerCard.js","components/GameLobby.js","components/Tags.js","components/PublishedGameCard.js","components/SearchResults.js","components/SearchResultsUser.js","store/index.js","components/LiveGameCard.js","components/HomeScreen.js","components/AccountScreen.js","components/ComicGameInProgressScreen.js","components/StoryGameInProgressScreen.js","components/HeaderBar.js","components/Profile.js","components/AlertModal.js","components/LoginScreen.js","components/RegisterScreen.js","components/StoryCard.js","components/GameComment.js","components/GameResult.js","App.js","index.js"],"names":["axios","defaults","withCredentials","api","create","baseURL","apis","getLoggedIn","get","registerUser","payload","post","loginUser","logoutUser","getUserByUsername","username","getUserSecurityQuestion","email","resetPassword","put","AuthContext","createContext","console","log","AuthActionType","AuthContextProvider","props","useState","user","loggedIn","auth","setAuth","history","useHistory","useEffect","authReducer","action","type","a","store","response","status","resetLocalSearchtext","resetPageViews","data","setErrorMessage","push","userData","errorMsg","errorMessage","setState","securityQuestion","Provider","value","children","socket","socketio","connect","SocketContext","Paint","useContext","p","Painterro","defaultTool","hiddenTools","saveHandler","image","done","emit","asBlob","show","handleGetPicture","useCallback","save","on","off","CreateGame","timePerRound","setTimePerRound","numRounds","setNumRounds","selectedTags","setSelectedTags","tagOptions","handleTagChange","event","id","target","tagIndex","substring","indexOf","tag","checked","includes","i","filter","item","index","customTags","setCustomTags","currentNumTags","length","split","v","canCreate","Box","alignItems","sx","display","backgroundColor","Typography","variant","noWrap","component","align","justifyContent","width","marginLeft","marginTop","flexDirection","Slider","defaultValue","step","min","max","valueLabelDisplay","marks","label","onChangeCommitted","newValue","FormGroup","sc","bgcolor","map","disabled","FormControlLabel","labelPlacement","control","Checkbox","onChange","style","color","TextField","fullWidth","InputLabelProps","borderRadius","borderStyle","borderColor","stopPropagation","preventDefault","height","Button","padding","fontSize","onClick","selectedTags_copy","slice","trim","forEach","elem","bull","mx","transform","LobbyCard","card","title","Array","CardContent","textDecoration","nowrap","gutterBottom","List","minHeight","maxHeight","overflow","minWidth","maxWidth","Card","borderWidth","PlayerCard","isCurrentUser","ListItem","fontWeight","GameLobby","playerList","creator","tags","currentUser","isOwner","gap","flexWrap","player","Tags","Grid","Container","PublishedGameCard","votes","comments","panels","numVotes","setNumVotes","numComments","setNumComments","commWinner","setCommWinner","count","win","m","container","xs","mb","pt","showBullets","showNavs","images","spacing","pb","SearchResults","results","publishedGames","gameID","communityVotes","message","postDate","Date","propsHardcoded","query","isUserSearch","userResults","gameResults","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","textContent","pubNewOption","MenuItem","pubOldOption","moreCommentsOption","lessCommentsOption","Menu","Link","underline","href","className","direction","SearchResultsUser","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","IconButton","edge","currentTarget","Badge","game","GlobalStoreContext","GlobalStoreActionType","GlobalStoreContextProvider","setStore","storeReducer","LiveGameCard","GameToggle","alignment","setAlignment","ToggleButtonGroup","exclusive","newAlignment","px","ToggleButton","HomeScreen","players","pr","name","AccountScreen","leftTheme","createTheme","palette","primary","main","secondary","rightTheme","CssBaseline","ThemeProvider","theme","noValidate","border","margin","required","autoComplete","autoFocus","mt","ComicGameInProgressScreen","window","ptro","src","alt","class","StoryGameInProgressScreen","TextareaAutosize","rows","maxRows","HomeButton","startIcon","size","LoginButton","SiteToggle","React","SearchBar","Search","styled","position","shape","alpha","common","white","marginRight","breakpoints","up","SearchIconWrapper","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","placeholder","inputProps","onKeyPress","code","AccountDropdown","setLoggedIn","anchorElUser","setAnchorElUser","handleMenuClick","pageURL","Tooltip","Avatar","fontsize","getContentAnchorEl","ListItemIcon","HeaderBar","AppBar","Toolbar","flexGrow","FollowButton","isFollowing","setIsFollowing","follow_text","Profile","AlertModal","setOpen","handleOpen","handleCloseModal","Modal","top","left","boxShadow","LoginScreen","state","handleLoginSubmit","formData","FormData","password","handleEmailSubmit","handleResetPassword","newPassword","newPasswordVerify","securityAnswer","onSubmit","alignContent","RegisterScreen","passwordVerify","StoryCard","content","winner","columnSpacing","GameComment","ml","mr","getMonth","getDate","getFullYear","GameResult","textAlign","story","multiline","App","default_theme","background","default","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b724ecb4.chunk.js","sourcesContent":["import axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:4000/api' //LOCAL BUILD\r\n    //baseURL: 'https://derit.herokuapp.com/api', HEROKU DEPLOYMENT \r\n\r\n})\r\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\r\nexport const registerUser = (payload) => api.post(`/register/`, payload)\r\nexport const loginUser = (payload) => api.post(`/user/`, payload)\r\nexport const logoutUser = () => api.get(`/logout/`)\r\nexport const getUserByUsername = (username) => api.get(`/user/${username}`)\r\nexport const getUserSecurityQuestion = (email) => api.get(`/user/email/${email}`)\r\nexport const resetPassword = (payload) => api.put(`/resetPassword/`, payload)\r\n\r\nconst apis = {\r\n    getLoggedIn,\r\n    registerUser,\r\n    loginUser,\r\n    logoutUser, \r\n    getUserByUsername,\r\n    getUserSecurityQuestion,\r\n    resetPassword\r\n}\r\n\r\nexport default apis\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport api from '../api'\r\n\r\nconst AuthContext = createContext();\r\nconsole.log(\"create AuthContext: \" + AuthContext);\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\r\nexport const AuthActionType = {\r\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\r\n    REGISTER_USER: \"REGISTER_USER\",\r\n    LOGIN_USER: \"LOGIN_USER\",\r\n    LOGOUT_USER: \"LOGOUT_USER\",\r\n}\r\n\r\nfunction AuthContextProvider(props) {\r\n    const [auth, setAuth] = useState({\r\n        user: null,\r\n        loggedIn: false\r\n    });\r\n    const history = useHistory();\r\n\r\n    //On load we check if the user is logged in or not\r\n    useEffect(() => {\r\n        auth.getLoggedIn();\r\n    });\r\n\r\n    const authReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            case AuthActionType.GET_LOGGED_IN: {\r\n                console.log(\"Inside GET_LOGGED_IN reducer, loggedIn: \", payload.loggedIn);\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: payload.loggedIn\r\n                });\r\n            }\r\n            case AuthActionType.REGISTER_USER: {\r\n                console.log(\"Inside REGISTER_USER reducer, loggedIn: \", true);\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true\r\n                })\r\n            }\r\n            case AuthActionType.LOGIN_USER: {\r\n                console.log(\"Inside LOGIN_USER reducer, loggedIn: \", payload.loggedIn);\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: payload.loggedIn //Assuming that if the login user reducer is called, we're loggedIn\r\n                })\r\n            }\r\n            case AuthActionType.LOGOUT_USER: {\r\n                console.log(\"Inside logout_USER reducer, loggedIn: \", payload.loggedIn);\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: false //Assuming that if the login user reducer is called, we're loggedIn\r\n                })\r\n            }\r\n            default:\r\n                return auth;\r\n        }\r\n    }\r\n\r\n    auth.logoutUser = async function (store) {\r\n        try{\r\n            const response = await api.logoutUser();\r\n            if (response.status === 200) {\r\n                store.resetLocalSearchtext();\r\n                store.resetPageViews();\r\n                authReducer({\r\n                    type: AuthActionType.GET_LOGGED_IN,\r\n                    payload: {\r\n                        loggedIn: response.data.loggedIn,\r\n                        user: response.data.user\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch(Exception){\r\n            console.log(\"Exception caught!\");\r\n            let errorMsg = \"Something went wrong logging you out.\";\r\n            store.setErrorMessage(errorMsg);\r\n        }\r\n    }\r\n\r\n\r\n    auth.getLoggedIn = async function () {\r\n        try{\r\n            const response = await api.getLoggedIn();\r\n            if (response.status === 200) {\r\n                authReducer({\r\n                    type: AuthActionType.GET_LOGGED_IN,\r\n                    payload: {\r\n                        loggedIn: response.data.loggedIn,\r\n                        user: response.data.user\r\n                    }\r\n                });\r\n                history.push(\"/\");\r\n                //Load the home page here\r\n            }\r\n        }\r\n        catch{\r\n            console.log(\"Got an error from auth.getLoggedIn\");\r\n        }\r\n    }\r\n\r\n    auth.registerUser = async function(userData, store) {\r\n        try{\r\n            console.log(\"userData: \", userData);\r\n            const response = await api.registerUser(userData);      \r\n            if (response.status === 200) {\r\n                authReducer({\r\n                    type: AuthActionType.REGISTER_USER,\r\n                    payload: {\r\n                        user: response.data.user\r\n                    }\r\n                })\r\n                history.push(\"/\");\r\n                //Load the home page here\r\n            }\r\n        }\r\n        catch(Exception){\r\n            let errorMsg = Exception.response.data.errorMessage;\r\n            store.setErrorMessage(errorMsg);\r\n        }\r\n    }\r\n\r\n    auth.loginUser = async function(userData, store) {\r\n        console.log(\"Inside auth.loginUser with userData: \", userData);\r\n        try{\r\n            const response = await api.loginUser(userData);\r\n            console.log(\"Users gotten from the database: \", response);\r\n            if (response.status === 200) {\r\n                console.log(\"Login status (from loginUser reducer: \", response.data.loggedIn);\r\n                console.log(\"User data: \", response.data.user);\r\n                authReducer({\r\n                    type: AuthActionType.LOGIN_USER,\r\n                    payload: {\r\n                        loggedIn: true,\r\n                        user: response.data.user\r\n                    }\r\n                })\r\n                history.push(\"/\");\r\n                //Load the home page here\r\n            }\r\n        }catch(Exception){\r\n            console.log(\"Exception caught!\");\r\n            let errorMsg = Exception.response.data.errorMessage;\r\n            store.setErrorMessage(errorMsg);\r\n        }\r\n    }\r\n\r\n\r\n    auth.getUserSecurityQuestion = async function(userData, setState, store) {\r\n        console.log(\"Inside auth.getUserSecurityQuestion with userData: \", userData);\r\n        try{\r\n            const response = await api.getUserSecurityQuestion(userData.email);\r\n            console.log(\"Users gotten from the database: \", response);\r\n            if (response.status === 200) {\r\n                setState({securityQuestion: response.data.securityQuestion, email: userData.email});\r\n            }\r\n        }catch(Exception){\r\n            console.log(\"Exception caught!\");\r\n            store.setErrorMessage(\"Please enter a valid email\")\r\n        }\r\n    }\r\n\r\n\r\n    auth.resetPassword = async function(userData, setState, store) {\r\n        console.log(\"Inside auth.resetPassword with userData: \", userData);\r\n        try{\r\n            const response = await api.resetPassword(userData);\r\n            console.log(\"Reset password response gotten from the database: \", response);\r\n            if (response.status === 200) {\r\n                setState(\"normalLogin\");\r\n                store.setErrorMessage(\"Your password has been successfully reset!\");\r\n            }\r\n        }catch(Exception){\r\n            console.log(\"Exception caught!\");\r\n            let errorMsg = Exception.response.data.errorMessage;\r\n            store.setErrorMessage(errorMsg);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };","import socketio from \"socket.io-client\";\r\nimport { createContext } from 'react'\r\nimport { SOCKET_ENDPOINT } from \"../config\";\r\n\r\nexport const socket = socketio.connect(SOCKET_ENDPOINT);\r\nexport const SocketContext = createContext();\r\n","export const SOCKET_ENDPOINT = \"http://localhost:3000\";\r\n","import { React, useContext, useEffect, useCallback } from 'react'\r\nimport { SocketContext } from \"../context/socket\";\r\nimport Painterro from \"painterro\"\r\n\r\nconst Paint = (props) => {\r\n    console.log(SocketContext);\r\n    const socket = useContext(SocketContext);\r\n    \r\n    \r\n    let saveHandler = (image, done) => {\r\n        socket.emit(\"sendPicture\", image.asBlob());\r\n    }\r\n\r\n    const p = Painterro({\r\n        defaultTool: \"brush\",\r\n        hiddenTools: [\"crop\", \"resize\", \"save\", \"open\", \"zoomin\", \"zoomout\", \"select\", \"settings\", \"pixelize\", \"close\"],\r\n        saveHandler: saveHandler\r\n    }).show();\r\n\r\n    const handleGetPicture = useCallback(() => {\r\n        console.log(\"Server wants picture\");\r\n        p.save();\r\n    }, [p]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"getPicture\", handleGetPicture);\r\n        return () => {socket.off(\"getPicture\");}\r\n    }, [socket, handleGetPicture]);\r\n\r\n    \r\n    \r\n    \r\n\r\n    return <div>\r\n    </div>\r\n}\r\n\r\nexport default Paint","import { React, useState } from 'react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CreateGame = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [timePerRound, setTimePerRound] = useState(20);\r\n    const handleTimerChange = (event, newValue) => {\r\n        setTimePerRound(newValue);\r\n        console.log(\"New time per round: \" + newValue);\r\n    };\r\n    \r\n    const [numRounds, setNumRounds] = useState(4);\r\n    const handleNumRoundsChange = (event, newValue) => {\r\n        setNumRounds(newValue);\r\n        console.log(\"New num rounds: \" + newValue);\r\n    };\r\n\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    let tagOptions = [\"Comedy\", \"Family-Friendly\", \"Drama\", \"Pop Culture\", \"Anime\", \"Sports\", \"Gaming\", \"Tragedy\", \"Educational\"];\r\n\r\n    const handleTagChange = (event) => {\r\n        let id = event.target.id;\r\n        let tagIndex = id.substring(id.indexOf(\"checkbox\") + 8);\r\n        let tag = tagOptions[tagIndex];\r\n\r\n        if (event.target.checked) {\r\n            console.log(\"User enabled \" + tag);\r\n            // User enabled this tag\r\n            if (selectedTags.includes(tag)) {\r\n                // Some fluke, it shouldn't already be in here, just leave it as is.\r\n                return;\r\n            }\r\n\r\n            setSelectedTags((selectedTags) => [...selectedTags, tag]);\r\n        }\r\n        else {\r\n            // User disabled this tag\r\n            console.log(\"User disabled \" + tag);\r\n            let i = selectedTags.indexOf(tag);\r\n            if (i !== -1) {\r\n                //selectedTags.splice(i, 1);\r\n                setSelectedTags((selectedTags) => [\r\n                    ...selectedTags.filter((item, index) => index !== i)\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const [customTags, setCustomTags] = useState(\"\");\r\n    const handleKeyPress = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        setCustomTags(event.target.value);\r\n    }\r\n\r\n    const timeSliderMarks = [\r\n        {\r\n            value: 10,\r\n            label: \"10 Seconds\"\r\n        },\r\n        {\r\n            value: 20,\r\n            label: \"20 Seconds\"\r\n        },\r\n        {\r\n            value: 30,\r\n            label: \"30 Seconds\"\r\n        },\r\n        {\r\n            value: 40,\r\n            label: \"40 Seconds\"\r\n        },\r\n        {\r\n            value: 50,\r\n            label: \"50 Seconds\"\r\n        },\r\n        {\r\n            value: 60,\r\n            label: \"60 Seconds\"\r\n        },\r\n\r\n    ];\r\n\r\n    \r\n    const roundSliderMarks = [\r\n        {\r\n            value: 2,\r\n            label: \"2 rounds\"\r\n        },\r\n        {\r\n            value: 4,\r\n            label: \"4 rounds\"\r\n        },\r\n        {\r\n            value: 6,\r\n            label: \"6 rounds\"\r\n        },\r\n        {\r\n            value: 8,\r\n            label: \"8 rounds\"\r\n        },\r\n        {\r\n            value: 10,\r\n            label: \"10 rounds\"\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const handleCreateGame = (event) => {\r\n        console.log(\"create game with parameters:\");\r\n        let selectedTags_copy = selectedTags.slice();\r\n\r\n        if (customTags) {\r\n            customTags.split(\",\")\r\n                .map(i => i.trim())\r\n                .forEach((elem, i) => {\r\n                    // prevent dupes\r\n                    if (!selectedTags_copy.includes(elem)) {\r\n                        selectedTags_copy.push(elem);\r\n                    }\r\n            });\r\n        }\r\n\r\n        console.log(timePerRound);\r\n        console.log(numRounds);\r\n        console.log(selectedTags_copy);\r\n\r\n        // TODO - hook this up\r\n        history.push(\"/lobby\");\r\n    }\r\n    \r\n    let currentNumTags = selectedTags.length + customTags.split(\",\").filter((v) => v !== \"\").length;\r\n    console.log(\"current num tags \" + currentNumTags);\r\n    let canCreate = (currentNumTags > 5 ? false : true);\r\n\r\n    return (\r\n        <div>\r\n        <Box alignItems=\"center\" sx={{ display: {\r\n            backgroundColor: \"#6A8D92\",\r\n\r\n        } }}>\r\n\r\n            <Typography variant=\"h1\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        align=\"center\">\r\n                Create a Game\r\n            </Typography>\r\n\r\n            <Box alignItems=\"center\" justifyContent=\"center\" sx={{ \r\n                    width: 700,\r\n                    marginLeft: \"30%\"\r\n                    }}>\r\n                \r\n                <Typography variant=\"h4\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{\r\n                            marginTop:10,\r\n                            marginLeft:10,\r\n                            justifyContent: \"center\",\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center'}}>\r\n                    Time Per Round:\r\n                </Typography>\r\n                <Slider\r\n                    aria-label=\"Time Per Round\"\r\n                    defaultValue={20}\r\n                    step = {1}\r\n                    min={10}\r\n                    max={60}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={timeSliderMarks}\r\n                    onChangeCommitted={handleTimerChange}\r\n                />\r\n            </Box>\r\n\r\n            <Box alignItems=\"center\" justifyContent=\"center\" sx={{ \r\n                    width: 700,\r\n                    marginLeft: \"30%\"\r\n                    }}>\r\n                \r\n                <Typography variant=\"h4\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{\r\n                            marginTop:10,\r\n                            marginLeft:10,\r\n                            justifyContent: \"center\",\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center'}}>\r\n                    Number of Rounds:\r\n                </Typography>\r\n                <Slider\r\n                    aria-label=\"Number of Rounds\"\r\n                    defaultValue={4}\r\n                    step = {1}\r\n                    min={1}\r\n                    max={10}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={roundSliderMarks}\r\n                    onChangeCommitted={handleNumRoundsChange}\r\n                />\r\n            </Box>\r\n            \r\n\r\n            <Box alignItems=\"center\" justifyContent=\"center\" sx={{ \r\n                    width: 700,\r\n                    marginLeft: \"30%\"\r\n                    }}>\r\n                \r\n                <Typography variant=\"h4\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{\r\n                            marginTop:10,\r\n                            marginLeft:10,\r\n                            justifyContent: \"center\",\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center'}}>\r\n                    Tags For This Game (Max 5 tags!)\r\n                </Typography>\r\n\r\n                <FormGroup \r\n                        sx={{\r\n                            marginTop:5,\r\n                            marginLeft:10,\r\n                            justifyContent: \"center\",\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center'\r\n                        }}\r\n                        sc={{bgcolor: \"#6A8D92\"}}>\r\n                    {tagOptions.map((tag, i) => {\r\n                        let disabled = (currentNumTags > 5 ? true : false);\r\n                        if (selectedTags.includes(tag)) {\r\n                            // leave the selected tags as clickable or else we get locked out\r\n                            disabled = false;\r\n                        }\r\n                        return (\r\n\r\n                            <FormControlLabel labelPlacement=\"bottom\" control={<Checkbox disabled={disabled} id={\"checkbox\" + i} onChange={handleTagChange} style={{color: \"#493548\"}}/>} label={tag} />\r\n                        )\r\n                        \r\n                    })\r\n                    }\r\n                </FormGroup>\r\n\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <TextField id=\"standard-basic\" label=\"Custom Tags (Comma Separated)\" variant=\"filled\"\r\n                        fullWidth\r\n                        sx={{\r\n                            marginTop:5,\r\n                            marginLeft:10,\r\n                            justifyContent: \"center\",\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n\r\n                        InputLabelProps={{\r\n                            style: { color: '#493548' },\r\n                        }}\r\n\r\n                        style={{\r\n                            borderRadius: \"10px\",\r\n                            borderStyle: \"solid\",\r\n                            borderColor: \"#6A6A6A\"\r\n                        }}\r\n                        onChange={handleKeyPress}\r\n                    \r\n                    />\r\n                </Box>\r\n                \r\n            </Box>\r\n            \r\n            <Box sx={{height:75}} />\r\n\r\n            <Box alignItems=\"center\" justifyContent=\"center\" sx={{ \r\n                    width: 700,\r\n                    marginLeft: \"45%\"\r\n                    }}>\r\n            \r\n\r\n                <Button variant=\"contained\"\r\n                        style={{\r\n                            borderRadius: 35,\r\n                            backgroundColor: \"#4b4e6d\",\r\n                            padding: \"18px 36px\",\r\n                            fontSize: \"18px\",\r\n                        }}\r\n                        onClick={handleCreateGame}\r\n                        disabled={!canCreate}\r\n                        >\r\n                    Create Game\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx= {{ height: 200}}/>\r\n\r\n            \r\n        </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateGame;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\n\r\nconst bull = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n      •\r\n    </Box>\r\n);\r\n\r\nexport default function LobbyCard(props) {\r\n\r\n  const { title, value } = props;\r\n  \r\n  let card;\r\n  if (value instanceof Array) {\r\n    card = (\r\n        <React.Fragment>\r\n          <CardContent  >\r\n            <Typography sx={{textDecoration: 'underline'}} align=\"center\" nowrap color=\"#a1e887\" variant=\"h5\" component=\"div\" gutterBottom>\r\n              {title}\r\n            </Typography>\r\n            <List align=\"center\" nowrap color=\"#a1e887\"  sx={{ minHeight:\"50px\", maxHeight:\"150px\", overflow: \"auto\"}}>\r\n              {value.map((value) => {\r\n                  return (\r\n                    <Typography nowrap color=\"#a1e887\" variant=\"h6\" component=\"div\" gutterBottom>\r\n                        {bull}{value}\r\n                    </Typography>\r\n                  );\r\n              })}\r\n            </List>\r\n          </CardContent>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n  else {\r\n    card = (\r\n        <React.Fragment>\r\n          <CardContent>\r\n            <Typography sx={{textDecoration: 'underline'}} align=\"center\" nowrap color=\"#a1e887\" variant=\"h5\" component=\"div\" gutterBottom>\r\n              {title}\r\n            </Typography>\r\n            <Typography align=\"center\" nowrap color=\"#a1e887\" variant=\"h6\" component=\"div\" gutterBottom>\r\n              {value}\r\n            </Typography>\r\n          </CardContent>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 275, maxWidth: 275\r\n    }}>\r\n      <Card variant=\"outlined\"\r\n            style={{\r\n                borderRadius: \"20px\",\r\n                borderStyle: \"solid\",\r\n                borderWidth: \"3px\",\r\n                borderColor: \"#80b192\"\r\n            }}\r\n            sx={{display: { backgroundColor: \"#4b4e6d\"}}}>\r\n            {card}\r\n        </Card>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItem from '@mui/material/ListItem';\r\n\r\nexport default function PlayerCard(props) {\r\n\r\n    const { username, isCurrentUser } = props;\r\n\r\n    let cardElement =\r\n        <ListItem\r\n            id={\"player\"}\r\n            \r\n            sx={{ marginTop: '10px',bgcolor: \"#4b4e6d\", height:\"65px\", minWidth:\"100px\", maxWidth:\"500px\"}}\r\n            style={{\r\n                fontSize: '24pt',\r\n                width: '500%',\r\n                borderRadius: \"15px\",\r\n                justifyContent: \"center\",\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                borderRadius: \"20px\",\r\n                borderStyle: \"solid\",\r\n                borderWidth: \"3px\",\r\n                borderColor: \"#80b192\"\r\n            }}>\r\n        \r\n                <Typography variant=\"h4\"\r\n                            noWrap\r\n                            component=\"div\"\r\n                            color={isCurrentUser ? \"#A1E887\" : \"#EEEEFF\"}\r\n                            sx={{fontWeight: isCurrentUser ? \"bold\" : \"\", maxWidth: \"200px\"}}\r\n                                >\r\n                    {username}\r\n                </Typography>\r\n\r\n        </ListItem>\r\n\r\n    return (cardElement);\r\n}","import { React, useState } from 'react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport LobbyCard from \"./LobbyCard\";\r\nimport PlayerCard from \"./PlayerCard\";\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//Array of objects of gameInfo\r\n// const gameInfo = {\r\n//     gameID: \"\",\r\n//     players: [],\r\n//     gameStatus: gameStatus.STATUS,\r\n//     playerVotes: [[]],\r\n//     creator: \"\",\r\n//     numRounds: data.numRounds,\r\n//     timePerRound: data.timePerRound,\r\n//     currentRound: 0,\r\n//     tags: []\r\n// };\r\n\r\nconst GameLobby = (props) => {\r\n    const history = useHistory();\r\n    // TODO : REMOVE\r\n    const propsHardcoded = {\r\n        currentUser: \"hatsuyuki\",\r\n        game: {\r\n            playerList: [\"hatsuyuki\", \"picard\", \"fuyu\", \"aoi\", \"mckenna\", \"asdsadsa\", \"asda\", \"asdsa\"],\r\n            creator: \"hatsuyuki\",\r\n            numRounds: 5,\r\n            timePerRound: 30,\r\n            tags: [\"Comedy\", \"Anime\", \"Family-Friendly\"]\r\n        }\r\n    }\r\n    // TODO : REMOVE ABOVE\r\n\r\n    const { playerList, creator, numRounds, timePerRound, tags } = propsHardcoded.game; // TODO - update this to just props\r\n    const currentUser = propsHardcoded.currentUser; // TODO - maybe we use the global store to get this?\r\n\r\n    // TODO - When we bring in state/the store, we'll want to determine who the user is that is actually invoking these events.\r\n    const handleLeaveGame = (event) => {\r\n        console.log(\"User left game\");\r\n        history.push('/')\r\n    }\r\n\r\n    const handleStartGame = (event) => {\r\n        console.log(\"User started game\");\r\n        history.push(\"/CGameInProgress/:id\");\r\n    }\r\n\r\n    const isOwner = (currentUser === creator);\r\n\r\n    return (\r\n        <div>\r\n        <Box alignItems=\"center\" sx={{ display: {\r\n            backgroundColor: \"#6A8D92\",\r\n\r\n        } }}>\r\n\r\n            <Typography variant=\"h1\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        align=\"center\">\r\n                    {creator + \"'s Game\"}\r\n            </Typography>\r\n\r\n            <Box display=\"flex\" alignItems=\"flex-start\" justifyContent=\"center\" gap=\"10px\">\r\n                <LobbyCard title=\"Number of Rounds:\" value={numRounds + \" Rounds\"}/>\r\n                <LobbyCard title=\"Time Per Round:\" value={timePerRound + \" Seconds\"}/>\r\n                <LobbyCard title=\"Tags:\" value={tags}/>\r\n            </Box>\r\n\r\n            <Typography variant=\"h2\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        align=\"center\"\r\n                        sx={{marginTop:5}}>\r\n                    Player List\r\n                </Typography>\r\n\r\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\" gap=\"10px\">\r\n                <List sx={{\r\n                            marginTop:2,\r\n                            marginLeft: \"-40%\",\r\n                            justifyContent: \"center\",\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            flexWrap: \"wrap\",\r\n                            height:\"325px\"\r\n                        }}>\r\n                    {playerList.map((player, i) => {\r\n\r\n                        return <PlayerCard username={player} isCurrentUser={currentUser === player}/>\r\n                    })}\r\n                </List>\r\n            </Box>\r\n\r\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\" gap=\"65px\" sx={{marginTop:5}}>\r\n                <Button variant=\"contained\"\r\n                        style={{\r\n                            borderRadius: 35,\r\n                            backgroundColor: \"#4b4e6d\",\r\n                            padding: \"18px 36px\",\r\n                            fontSize: \"18px\",\r\n                        }}\r\n                        onClick={handleLeaveGame}\r\n                        >\r\n                    Leave Game\r\n                </Button>\r\n\r\n                <Button variant=\"contained\"\r\n                        style={{\r\n                            borderRadius: 35,\r\n                            backgroundColor: \"#4b4e6d\",\r\n                            padding: \"18px 36px\",\r\n                            fontSize: \"18px\",\r\n                        }}\r\n                        disabled = {isOwner ? false : true}\r\n                        onClick={handleStartGame}\r\n                        >\r\n                    Start Game\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx= {{ height: 200}}/>\r\n        </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameLobby;\r\n","import { Box, Container, Grid, Typography } from '@mui/material';\r\nimport React from 'react'\r\n\r\nconst Tags = ({tag}) => {\r\n  return (\r\n    <Grid item>\r\n        <Container style={{backgroundColor:\"#A1E887\", borderRadius:\"20px\"}}>\r\n            <Typography variant=\"subtitle2\">\r\n                {tag}\r\n            </Typography>\r\n        </Container>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import { Box, Button, Container, Grid, Typography } from '@mui/material';\r\nimport Tags from \"./Tags\"\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PublishedGameCard = ({creator, tags, votes, comments, panels}) => {\r\n   const [numVotes, setNumVotes] = useState(0);\r\n   const [numComments, setNumComments] = useState(0);\r\n   const [commWinner, setCommWinner] = useState(-1);\r\n   let history = useHistory();\r\n\r\n   useEffect(()=> {\r\n       let count = 0;\r\n       for(let i = 0; i < votes.length; i++)\r\n       {\r\n           count += votes[i].length;\r\n       }\r\n\r\n       setNumVotes(count);\r\n       setNumComments(comments.length);\r\n   })\r\n\r\n   useEffect(() => {\r\n    let max = -1;\r\n    let win = -1;\r\n\r\n    for(let i = 0; i < votes.length; i++)\r\n    {\r\n      if(votes[i].length > max){\r\n        max = votes[i].length;\r\n        win = i;\r\n      }\r\n    }\r\n\r\n    setCommWinner(win);\r\n    // console.log(commWinner);\r\n  });\r\n\r\n  return (\r\n    <Grid item m={2}>\r\n        <Container style={{width:\"330px\", backgroundColor:\"#80B192\", borderRadius:\"20px\"}}>\r\n            <Grid container>\r\n              <Grid item xs={9}>\r\n                <Typography variant=\"h5\" mb={2} pt={1}>\r\n                  {creator}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item pt={1}>\r\n                <Button \r\n                style={{backgroundColor:\"#A1E887\", color:\"black\"}}\r\n                onClick={()=>{\r\n                  history.push('/gameResult/:id')\r\n                }}\r\n                >Visit</Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {commWinner >= 0 ? <SimpleImageSlider width={280} height={280} showBullets={true} showNavs={true} images={panels[commWinner]} /> : <SimpleImageSlider width={300} height={280} showBullets={true} showNavs={true} images={panels[0]} />}\r\n\r\n            <Typography variant=\"subtitle1\" mb={1}>\r\n                Votes: {numVotes}; Comments: {numComments}\r\n            </Typography>\r\n\r\n            <Grid container spacing={1} pb={2} sx={{overflow:\"auto\"}}>\r\n                {tags.map((tag) => (\r\n                    <Tags tag={tag}/>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PublishedGameCard\r\n","import { React, useState } from 'react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Link from '@mui/material/Link';\r\n\r\nimport { Grid } from '@mui/material';\r\n\r\n\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nimport PublishedGameCard from \"./PublishedGameCard\";\r\n\r\nconst SearchResults = (props) => {\r\n\r\n    // TODO : REMOVE\r\n    // TODO - Props will only have either userResults OR gameResults\r\n    const publishedGames = [\r\n        {\r\n            creator:\"gabe\",\r\n            gameID : \"JYGS\",\r\n            panels: [\r\n                [\"/images/1.png\", \"/images/2.png\", \"/images/3.png\", \"/images/4.png\"],\r\n                [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n            ],\r\n            communityVotes: [\r\n                [\"npc1\", \"npc2\"],\r\n                []\r\n            ],\r\n            comments: [\r\n                {\r\n                  user:\"user1\",\r\n                  message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user2\",\r\n                  message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user3\",\r\n                  message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user4\",\r\n                  message:\"I hope one day I can see something as beautiful as this again. I can't believe something as amazing as this exists!\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user5\",\r\n                  message:\"I hope the user above me has a good day\",\r\n                  postDate:new Date()\r\n                },\r\n            ],\r\n            tags : [\"Unbelievable\", \"Pokemon\", \"Digimon\", \"War\"]\r\n        },\r\n        {\r\n            creator:\"david\",\r\n            gameID : \"KUGB\",\r\n            panels: [\r\n                [\"/images/mark_oukan_crown7_blue.png\", \"/images/4.png\", \"/images/4.png\", \"/images/4.png\"],\r\n                [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n            ],\r\n            communityVotes: [\r\n                [],\r\n                []\r\n            ],\r\n            comments: [\r\n                {\r\n                  user:\"user1\",\r\n                  message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user2\",\r\n                  message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user3\",\r\n                  message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n                  postDate:new Date()\r\n                }\r\n            ],\r\n            tags : [\"NewPlayer\", \"Crown\"]\r\n        }\r\n    ];\r\n    const propsHardcoded = {\r\n        currentUser: \"Aoi\",\r\n        query: \"Comedy, Family-Friendly\"\r\n    };\r\n\r\n    // TODO : REMOVE ABOVE\r\n\r\n    let isUserSearch = true;\r\n    let results;\r\n    if (propsHardcoded.userResults) {\r\n        // user search\r\n        results = propsHardcoded.userResults;\r\n    }\r\n    else {\r\n        // game search\r\n        results = propsHardcoded.gameResults;\r\n        isUserSearch = false;\r\n    }\r\n\r\n    const currentUser = propsHardcoded.currentUser; // TODO - maybe we use the global store to get this?\r\n    const query = propsHardcoded.query;\r\n\r\n\r\n    const currentSortType = {\r\n        PUB_NEW: \"PUB_NEW\",\r\n        PUB_OLD: \"PUB_OLD\",\r\n        COMMENTS_ASC: \"COMMENTS_ASC\",\r\n        COMMENTS_DESC: \"COMMENTS_DESC\"\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = (event) => {\r\n        setAnchorEl(null);\r\n        console.log(\"Sort By: \" + event.target.textContent);\r\n        switch (event.target.textContent) {\r\n            // Sort accordingly\r\n            case \"Publish Date (Newest)\":\r\n                break;\r\n            case \"Publish Date (Oldest)\":\r\n                break;\r\n            case \"Number of Comments (Descending)\":\r\n                break;\r\n            case \"Number of Comments (Ascending)\":\r\n                break;\r\n            default:\r\n                console.log(\"Sort menu closed\");\r\n                break;\r\n        }\r\n    };\r\n\r\n    const pubNewOption = (<MenuItem onClick={handleMenuClose}>Publish Date (Newest)</MenuItem>);\r\n    const pubOldOption = (<MenuItem onClick={handleMenuClose}>Publish Date (Oldest)</MenuItem>);\r\n\r\n    const moreCommentsOption = (<MenuItem onClick={handleMenuClose}>Number of Comments (Descending)</MenuItem>); // descending\r\n    const lessCommentsOption = (<MenuItem onClick={handleMenuClose}>Number of Comments (Ascending)</MenuItem>); // ascending\r\n\r\n    // TODO - implement highlighted sort option when we implement the store (see AppBar.js)\r\n    const menuId = \"sort-menu\";\r\n    const renderMenu = (\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          id={menuId}\r\n          keepMounted\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={isMenuOpen}\r\n          onClose={handleMenuClose}\r\n        >\r\n          {pubNewOption}\r\n          {pubOldOption}\r\n          {moreCommentsOption}\r\n          {lessCommentsOption}\r\n        </Menu>\r\n    );\r\n\r\n\r\n    // we don't need the cards just return a list of users\r\n    if (isUserSearch) {\r\n        return (\r\n            <div>\r\n                <Box alignItems=\"center\" sx={{ display: {\r\n                    backgroundColor: \"#6A8D92\",\r\n        \r\n                } }}>\r\n        \r\n                    <Typography variant=\"h2\"\r\n                                noWrap\r\n                                component=\"div\"\r\n                                align=\"center\">\r\n                            {\"Search Results For: \" + query}\r\n                    </Typography>\r\n\r\n                    <List sx={{\r\n                                marginTop:2,\r\n                                marginLeft: 85,\r\n                                justifyContent: \"center\",\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                overflow: \"auto\",\r\n                                maxHeight:\"750px\",\r\n                                width: \"600px\"\r\n                            }}>\r\n                        {results.map((user, i) => {\r\n                            return (\r\n                                <ListItem\r\n                                    key={i}\r\n                                    sx={{ marginTop: '5px',bgcolor: \"#4b4e6d\", height:\"65px\", minWidth:\"100px\", maxWidth:\"500px\"}}\r\n                                    style={{\r\n                                        fontSize: '24pt',\r\n                                        width: '500%',\r\n                                        borderRadius: \"15px\",\r\n                                        justifyContent: \"center\",\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        borderRadius: \"20px\",\r\n                                        borderStyle: \"solid\",\r\n                                        borderWidth: \"3px\",\r\n                                        borderColor: \"#80b192\"\r\n                                    }}>\r\n                                        <Link underline=\"none\" href={\"/\" + user}>\r\n                                            <Typography variant=\"h4\"\r\n                                                        noWrap\r\n                                                        component=\"div\"\r\n                                                        color={ \"#A1E887\"}>\r\n                                                {user}\r\n                                            </Typography>\r\n                                        </Link>\r\n                                </ListItem>\r\n                            );                    \r\n                        })}\r\n                    </List>\r\n                    \r\n                    <Box sx= {{ height: 700}}/>\r\n                </Box>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Box className=\"back\" pb={4}>\r\n                <Typography align=\"center\" variant=\"h2\">{\"Search Results For: \" + query}</Typography>\r\n                <Grid \r\n                    container \r\n                    direction='row'\r\n                >\r\n                    <Grid item xs={10}>\r\n    \r\n                        {\r\n                            <Grid container>\r\n                                {publishedGames.map(({creator, tags, communityVotes, comments, panels}) => (\r\n                                    <PublishedGameCard creator={creator} tags={tags} votes={communityVotes} comments={comments} panels={panels}/>\r\n                                ))}\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n    \r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchResults;\r\n","import { React, useState } from 'react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Link from '@mui/material/Link';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport SortIcon from '@mui/icons-material/Sort';\r\n\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\n\r\n// TODO - REMOVE. THIS IS PURELY FOR PURPOSES OF CHECKPOINT 2.\r\n\r\nconst SearchResultsUser = (props) => {\r\n\r\n    // TODO : REMOVE\r\n    // TODO - Props will only have either userResults OR gameResults\r\n    const propsHardcoded = {\r\n        currentUser: \"aoi\",\r\n        query: \"u:mckenna\",\r\n        userResults: [\"McKenna\"]\r\n    };\r\n    // TODO : REMOVE ABOVE\r\n\r\n    let isUserSearch = true;\r\n    let results;\r\n    if (propsHardcoded.userResults) {\r\n        // user search\r\n        results = propsHardcoded.userResults;\r\n    }\r\n    else {\r\n        // game search\r\n        results = propsHardcoded.gameResults;\r\n        isUserSearch = false;\r\n    }\r\n\r\n    const currentUser = propsHardcoded.currentUser; // TODO - maybe we use the global store to get this?\r\n    const query = propsHardcoded.query;\r\n\r\n\r\n    const currentSortType = {\r\n        PUB_NEW: \"PUB_NEW\",\r\n        PUB_OLD: \"PUB_OLD\",\r\n        COMMENTS_ASC: \"COMMENTS_ASC\",\r\n        COMMENTS_DESC: \"COMMENTS_DESC\"\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = (event) => {\r\n        setAnchorEl(null);\r\n        console.log(\"Sort By: \" + event.target.textContent);\r\n        switch (event.target.textContent) {\r\n            // Sort accordingly\r\n            case \"Publish Date (Newest)\":\r\n                break;\r\n            case \"Publish Date (Oldest)\":\r\n                break;\r\n            case \"Number of Comments (Descending)\":\r\n                break;\r\n            case \"Number of Comments (Ascending)\":\r\n                break;\r\n            default:\r\n                console.log(\"Sort menu closed\");\r\n                break;\r\n        }\r\n    };\r\n\r\n    const pubNewOption = (<MenuItem onClick={handleMenuClose}>Publish Date (Newest)</MenuItem>);\r\n    const pubOldOption = (<MenuItem onClick={handleMenuClose}>Publish Date (Oldest)</MenuItem>);\r\n\r\n    const moreCommentsOption = (<MenuItem onClick={handleMenuClose}>Number of Comments (Descending)</MenuItem>); // descending\r\n    const lessCommentsOption = (<MenuItem onClick={handleMenuClose}>Number of Comments (Ascending)</MenuItem>); // ascending\r\n\r\n    // TODO - implement highlighted sort option when we implement the store (see AppBar.js)\r\n    const menuId = \"sort-menu\";\r\n    const renderMenu = (\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          id={menuId}\r\n          keepMounted\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={isMenuOpen}\r\n          onClose={handleMenuClose}\r\n        >\r\n          {pubNewOption}\r\n          {pubOldOption}\r\n          {moreCommentsOption}\r\n          {lessCommentsOption}\r\n        </Menu>\r\n    );\r\n\r\n\r\n    // we don't need the cards just return a list of users\r\n    if (isUserSearch) {\r\n        return (\r\n            <div>\r\n                <Box alignItems=\"center\" sx={{ display: {\r\n                    backgroundColor: \"#6A8D92\",\r\n        \r\n                } }}>\r\n        \r\n                    <Typography variant=\"h2\"\r\n                                noWrap\r\n                                component=\"div\"\r\n                                align=\"center\">\r\n                            {\"Search Results For: \" + query}\r\n                    </Typography>\r\n\r\n                    <List sx={{\r\n                                marginTop:2,\r\n                                marginLeft: 85,\r\n                                justifyContent: \"center\",\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                overflow: \"auto\",\r\n                                maxHeight:\"750px\",\r\n                                width: \"600px\"\r\n                            }}>\r\n                        {results.map((user, i) => {\r\n                            return (\r\n                                <ListItem\r\n                                    key={i}\r\n                                    sx={{ marginTop: '5px',bgcolor: \"#4b4e6d\", height:\"65px\", minWidth:\"100px\", maxWidth:\"500px\"}}\r\n                                    style={{\r\n                                        fontSize: '24pt',\r\n                                        width: '500%',\r\n                                        borderRadius: \"15px\",\r\n                                        justifyContent: \"center\",\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        borderRadius: \"20px\",\r\n                                        borderStyle: \"solid\",\r\n                                        borderWidth: \"3px\",\r\n                                        borderColor: \"#80b192\"\r\n                                    }}>\r\n                                        <Link underline=\"none\" href={\"/profile\" }>\r\n                                            <Typography variant=\"h4\"\r\n                                                        noWrap\r\n                                                        component=\"div\"\r\n                                                        color={ \"#A1E887\"}>\r\n                                                {user}\r\n                                            </Typography>\r\n                                        </Link>\r\n                                </ListItem>\r\n                            );                    \r\n                        })}\r\n                    </List>\r\n                    \r\n                    <Box sx= {{ height: 700}}/>\r\n                </Box>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        // TODO- @Vicky need content cards\r\n        return (\r\n                <div>\r\n                <Box alignItems=\"center\" sx={{ display: {\r\n                    backgroundColor: \"#6A8D92\",\r\n        \r\n                } }}>\r\n        \r\n                    <Typography variant=\"h2\"\r\n                                noWrap\r\n                                component=\"div\"\r\n                                align=\"center\">\r\n                            {\"Search Results For: \" + query}\r\n                    </Typography>\r\n\r\n                    \r\n\r\n                    <Box display=\"flex\" alignItems=\"flex-start\" justifyContent=\"center\" gap=\"10px\">\r\n\r\n                        <Typography variant=\"h6\"\r\n                                    noWrap\r\n                                    component=\"div\"\r\n                                    align=\"center\"\r\n                                    sx={{marginTop:1}}\r\n                        >\r\n                            Sort By\r\n                        </Typography>\r\n\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"Sort Menu\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenuOpen}\r\n                            color=\"default\"\r\n                            >\r\n                                <Badge>\r\n                                    <SortIcon  sx={{ fontSize: 40 }}/>\r\n                                </Badge>\r\n                        </IconButton>\r\n\r\n                        {renderMenu}\r\n                    </Box>\r\n                    \r\n\r\n                    <List sx={{\r\n                                marginTop:2,\r\n                                marginLeft: 85,\r\n                                justifyContent: \"center\",\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                overflow: \"auto\",\r\n                                maxHeight:\"750px\",\r\n                                width: \"600px\"\r\n                            }}>\r\n                        {results.map((game, i) => {\r\n                            return (\r\n                                <ListItem\r\n                                    key={i}\r\n                                    sx={{ marginTop: '5px',bgcolor: \"#4b4e6d\", height:\"65px\", minWidth:\"100px\", maxWidth:\"500px\"}}\r\n                                    style={{\r\n                                        fontSize: '24pt',\r\n                                        width: '500%',\r\n                                        borderRadius: \"15px\",\r\n                                        justifyContent: \"center\",\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        borderRadius: \"20px\",\r\n                                        borderStyle: \"solid\",\r\n                                        borderWidth: \"3px\",\r\n                                        borderColor: \"#80b192\"\r\n                                    }}>\r\n                                        <Link underline=\"none\" href={\"/\" + game}>\r\n                                            <Typography variant=\"h4\"\r\n                                                        noWrap\r\n                                                        component=\"div\"\r\n                                                        color={ \"#A1E887\"}>\r\n                                                {game}\r\n                                            </Typography>\r\n                                        </Link>\r\n                                </ListItem>\r\n                            );                    \r\n                        })}\r\n                    </List>\r\n                    \r\n                    <Box sx= {{ height: 200}}/>\r\n                </Box>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchResultsUser;\r\n","import { createContext, useState } from 'react'\r\n\r\n// THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\r\nexport const GlobalStoreContext = createContext({});\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\r\n// DATA STORE STATE THAT CAN BE PROCESSED\r\nexport const GlobalStoreActionType = {\r\n    SET_ERROR_MESSAGE: \"SET_ERROR_MESSAGE\"\r\n}\r\n\r\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\r\n// AVAILABLE TO THE REST OF THE APPLICATION\r\nfunction GlobalStoreContextProvider(props) {\r\n    // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\r\n    const [store, setStore] = useState({\r\n        errorMessage:null\r\n    });\r\n    const storeReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            case GlobalStoreActionType.SET_ERROR_MESSAGE: {\r\n                return setStore({\r\n                    errorMessage: payload\r\n                });\r\n            }\r\n            default:\r\n                return store;\r\n        }\r\n    }\r\n\r\n        //SET THE ERROR MESSAGE SO WE CAN DISPLAY IT IN THE ALERT MODAL\r\n        store.setErrorMessage = function (errorMsg) {\r\n            storeReducer({\r\n                type: GlobalStoreActionType.SET_ERROR_MESSAGE,\r\n                payload: errorMsg\r\n            });\r\n        }\r\n\r\n    return (\r\n        <GlobalStoreContext.Provider value={{\r\n            store\r\n        }}>\r\n            {props.children}\r\n        </GlobalStoreContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default GlobalStoreContext;\r\nexport { GlobalStoreContextProvider };","import { Box, Container, Grid, Typography } from '@mui/material';\r\nimport Tags from \"./Tags\"\r\nimport React from 'react'\r\n\r\nconst LiveGameCard = ({creator, gameID, numRounds, timePerRound, tags}) => {\r\n  return (\r\n    <Grid item m={2}>\r\n        <Container style={{width:\"330px\", backgroundColor:\"#80B192\", borderRadius:\"20px\"}}>\r\n            <Typography variant=\"h5\" mb={2} pt={1}>\r\n                {creator}\r\n            </Typography>\r\n\r\n            <Typography variant=\"h1\" mb={1}>\r\n                {gameID}\r\n            </Typography>\r\n\r\n            <Typography variant=\"subtitle1\" mb={1}>\r\n                Rounds: {numRounds}; Time per round: {timePerRound}\r\n            </Typography>\r\n\r\n            <Grid container spacing={1} pb={2} sx={{overflow:\"auto\"}}>\r\n                {tags.map((tag) => (\r\n                    <Tags tag={tag}/>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LiveGameCard\r\n","import React from 'react';\r\nimport { GlobalStoreContext } from '../store'\r\nimport AuthContext from '../auth'\r\nimport { useContext, useState } from 'react'\r\nimport { Container, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system';\r\nimport { TextField } from '@mui/material';\r\nimport { ToggleButton } from '@mui/material';\r\nimport { ToggleButtonGroup } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport Tags from \"./Tags\"\r\nimport LiveGameCard from './LiveGameCard';\r\nimport PublishedGameCard from './PublishedGameCard';\r\n\r\n\r\n// toggles between live and completed games\r\nconst GameToggle = ({alignment, setAlignment}) => {\r\n        const handleChange = (event, newAlignment) => {\r\n            if(newAlignment !== null) {\r\n                setAlignment(newAlignment);\r\n            }\r\n        };\r\n        return (\r\n        <ToggleButtonGroup \r\n            exclusive \r\n            onChange={handleChange}\r\n            value={alignment}\r\n            sx = {{\r\n                px: 2\r\n            }}\r\n        >\r\n            <ToggleButton color=\"secondary\" value=\"completed\">\r\n                <Typography><strong>Completed</strong></Typography>\r\n            </ToggleButton>\r\n            <ToggleButton color=\"secondary\" value=\"live\">\r\n                <Typography><strong>Live</strong></Typography>\r\n            </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        );\r\n};\r\n\r\nconst HomeScreen = () => {\r\n    const [alignment, setAlignment] = useState('completed');\r\n    //const { auth } = useContext(AuthContext);\r\n    //const { store } = useContext(GlobalStoreContext);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     store.loadIdNamePairs();\r\n    // }, []);\r\n\r\n    // obtain a list of cards based on what is being asked\r\n    // Story/Comic\r\n    // Completed/Joinable\r\n\r\n    //Example data\r\n    const liveGames = [\r\n        {\r\n            players:[\"tim\", \"gabe\", \"david\", \"vicky\"],\r\n            creator:\"tim\",\r\n            gameID : \"IYBH\",\r\n            numRounds : 5,\r\n            timePerRound : 30,\r\n            tags : [\"Anime\", \"Superpower\", \"Stickman\", \"Basic\"]\r\n        },\r\n        {\r\n            players:[\"tim\", \"gabe\", \"david\", \"vicky\"],\r\n            creator:\"gabe\",\r\n            gameID : \"JYGS\",\r\n            numRounds : 2,\r\n            timePerRound : 10,\r\n            tags : [\"notCool\"]\r\n        },\r\n        {\r\n            players:[\"jan\", \"tim\", \"gabe\", \"david\", \"vicky\"],\r\n            creator:\"jan\",\r\n            gameID : \"YGFV\",\r\n            numRounds : 4,\r\n            timePerRound : 27,\r\n            tags : [\"b\"]\r\n        },\r\n        {\r\n            players:[\"jack\", \"tim\", \"gabe\", \"david\", \"vicky\"],\r\n            creator:\"jack\",\r\n            gameID : \"KUGH\",\r\n            numRounds : 8,\r\n            timePerRound : 35,\r\n            tags : []\r\n        },\r\n    ];\r\n\r\n    const publishedGames = [\r\n        {\r\n            creator:\"vicky\",\r\n            gameID : \"JYGS\",\r\n            panels: [\r\n                [\"/images/1.png\", \"/images/2.png\", \"/images/3.png\", \"/images/4.png\"],\r\n                [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n            ],\r\n            communityVotes: [\r\n                [\"npc1\", \"npc2\"],\r\n                []\r\n            ],\r\n            comments: [\r\n                {\r\n                  user:\"user1\",\r\n                  message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user2\",\r\n                  message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user3\",\r\n                  message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user4\",\r\n                  message:\"I hope one day I can see something as beautiful as this again. I can't believe something as amazing as this exists!\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user5\",\r\n                  message:\"I hope the user above me has a good day\",\r\n                  postDate:new Date()\r\n                },\r\n            ],\r\n            tags : [\"Unbelievable\", \"Pokemon\", \"Digimon\", \"War\"]\r\n        },\r\n        {\r\n            creator:\"david\",\r\n            gameID : \"KUGB\",\r\n            panels: [\r\n                [\"/images/mark_oukan_crown7_blue.png\", \"/images/4.png\", \"/images/4.png\", \"/images/4.png\"],\r\n                [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n            ],\r\n            communityVotes: [\r\n                [],\r\n                []\r\n            ],\r\n            comments: [\r\n                {\r\n                  user:\"user1\",\r\n                  message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user2\",\r\n                  message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user3\",\r\n                  message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n                  postDate:new Date()\r\n                }\r\n            ],\r\n            tags : [\"NewPlayer\", \"Crown\"]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n        <Box className=\"back\" pb={4}>\r\n            <Typography align=\"center\" variant=\"h1\">Games</Typography>\r\n            <Grid \r\n                container \r\n                direction='row'\r\n            >\r\n                <Grid item xs={10}>\r\n                    {alignment == \"live\" ? \r\n                        <Grid container>\r\n                            {liveGames.map(({creator, gameID, numRounds, timePerRound, tags}) => (\r\n                                <LiveGameCard creator={creator} gameID={gameID} numRounds={numRounds} timePerRound={timePerRound} tags={tags}/>\r\n                            ))}\r\n                        </Grid> : ''\r\n                    }\r\n\r\n                    {alignment == \"completed\" ? \r\n                        <Grid container>\r\n                            {publishedGames.map(({creator, tags, communityVotes, comments, panels}) => (\r\n                                <PublishedGameCard creator={creator} tags={tags} votes={communityVotes} comments={comments} panels={panels}/>\r\n                            ))}\r\n                        </Grid> : ''\r\n                    }\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={2}>\r\n                    <Grid container justifyContent=\"right\" pr={2}>\r\n                        <Box>\r\n                            <Typography align=\"center\" variant=\"h4\">Filter Games</Typography>\r\n                            <GameToggle alignment={alignment} setAlignment={setAlignment}/>\r\n                            <Typography align=\"center\" variant=\"h4\">Join Game</Typography>\r\n                            <TextField name=\"game-code\" label=\"Game Code\" id=\"game-code\"/>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","import Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@mui/private-theming';\r\n\r\nconst AccountScreen = () => {\r\n    const leftTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n              main: '#9FB4C7',\r\n            },\r\n            secondary: {\r\n              main: '#6A8D92',\r\n            }\r\n        },\r\n      });\r\n      const rightTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n              main: '#6A8D92',\r\n            },\r\n            secondary: {\r\n              main: '#9FB4C7',\r\n            }\r\n        },\r\n      });\r\n      \r\n    return (\r\n        <div className='back'>\r\n                <Container component=\"main\" maxWidth=\"lg\" maxHeight=\"lg\">\r\n                <CssBaseline />\r\n                <Box pb={5}\r\n                sx={{\r\n                    marginTop: 10,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                }}\r\n                >\r\n                    <ThemeProvider theme={leftTheme}>\r\n                    <Box component=\"form\" noValidate sx={{bgcolor:\"secondary.main\", border:2, borderColor:\"black\", width:'75%'}}>\r\n                        <Box sx={{pt:10}}>\r\n                            <Typography align=\"center\" variant=\"h4\"> Change Username?</Typography>\r\n                        </Box>\r\n                        <TextField margin=\"normal\" required fullWidth id=\"username\" label=\"New Username\" name=\"username\" autoComplete=\"username\" autoFocus/>\r\n                        <TextField margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"current-password\"/>\r\n                        <Typography align=\"center\">\r\n                                <Button  type=\"submit\" variant=\"contained\" sx={{mt: 3, mb: 2, width:'50%', backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}}>\r\n                                    Change Username\r\n                                </Button>\r\n                        </Typography>\r\n                        <Box sx={{pt:10}}>\r\n                            <Typography align=\"center\" variant=\"h4\"> Change Password?</Typography>\r\n                        </Box>\r\n                        <TextField margin=\"normal\" required fullWidth name=\"new-password-1\" label=\"New Password\" type=\"password\" id=\"new-password-1\" autoComplete=\"new-password\"/>\r\n                        <TextField margin=\"normal\" required fullWidth name=\"new-password-2\" label=\"New Password\" type=\"password\" id=\"new-password-2\" autoComplete=\"new-password\"/>\r\n                        <TextField margin=\"normal\" required fullWidth name=\"password\" label=\"Current Password\" type=\"password\" id=\"password\" autoComplete=\"current-password\"/>\r\n                        <Typography align=\"center\">\r\n                                <Button  type=\"submit\" variant=\"contained\" sx={{mt: 3, mb: 2, width:'50%', backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}}>\r\n                                    Change Password\r\n                                </Button>\r\n                            </Typography>\r\n                    </Box>\r\n                    </ThemeProvider>\r\n                    <ThemeProvider theme={rightTheme}>\r\n                    <Box component=\"form\" noValidate sx={{bgcolor:\"secondary.main\", border:2, borderColor:\"black\", height: '100%'}}>\r\n                        <Box sx={{pt:10, pb:22}}>\r\n                            <Typography align=\"center\" variant=\"h4\"> Delete Account?</Typography>\r\n                        </Box>\r\n                        <Typography align=\"center\" variant=\"h6\"> {\"This action is permanent and CANNOT be undone.\"}</Typography>\r\n                        <Box  sx={{pt:24.8}}>\r\n                            <TextField margin=\"normal\" required fullWidth id=\"email\" label=\"Email\" name=\"email\" autoComplete=\"email\" autoFocus/>\r\n                            <TextField margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"current-password\"/>\r\n                            <Typography align=\"center\">\r\n                                <Button  type=\"submit\" variant=\"contained\" color=\"error\" sx={{ mt: 3, mb: 2, width:'50%', fontWeight:\"bold\"}}>\r\n                                    Delete Account\r\n                                </Button>\r\n                            </Typography>\r\n                        </Box>\r\n                        \r\n\r\n\r\n                        <Grid container>\r\n                        <Grid item xs>\r\n                        </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                    </ThemeProvider>\r\n                </Box>\r\n            </Container>\r\n  </div>\r\n\r\n        )\r\n}\r\n\r\nexport default AccountScreen;","import { React, useContext, useEffect } from 'react'\r\nimport { SocketContext } from \"../context/socket\";\r\nimport Painterro from \"painterro\"\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@mui/private-theming';\r\n\r\nconst ComicGameInProgressScreen = (props) => {\r\n    console.log(SocketContext);\r\n    const socket = useContext(SocketContext);\r\n    \r\n    \r\n    let saveHandler = (image, done) => {\r\n        socket.emit(\"saveImage\", image.asBlob());\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.ptro = Painterro({\r\n        id: 'painterro',\r\n        defaultTool: \"brush\",\r\n        hiddenTools: [\"crop\", \"resize\", \"save\", \"open\", \"zoomin\", \"zoomout\", \"select\", \"settings\", \"pixelize\", \"close\"],\r\n        saveHandler: saveHandler\r\n        }).show();\r\n       });\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n              main: '#6A8D92',\r\n            },\r\n            secondary: {\r\n              main: '#9FB4C7',\r\n            }\r\n        },\r\n      });\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"false\" maxHeight=\"lg\">\r\n                <CssBaseline />\r\n                <Box\r\n                sx={{\r\n                    marginTop:15,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                }}\r\n                >\r\n                    <Box>\r\n                        <Typography mb={2} align=\"center\" variant=\"h4\"> Time left: 30S </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\"> Previous Panel </Typography>\r\n                        <Box noValidate sx={{ border:2, borderColor:\"black\", height:\"60vh\", width:\"40vw\"}}>\r\n                            <img width='100%' height='100%' src=\"/images/unknown.png\" alt='previous panel'></img> \r\n                        </Box>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography mb={2} align=\"center\" variant=\"h4\"> Round 1/n </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\"> Current Panel </Typography>\r\n                        <Box id=\"painterro\" class=\"pa\" noValidate sx={{bgcolor:\"secondary.main\", border:2, borderColor:\"black\"}}>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n    </ThemeProvider>\r\n  </div>\r\n      );\r\n}\r\n\r\nexport default ComicGameInProgressScreen","import { React} from 'react'\r\nimport { SocketContext } from \"../context/socket\";\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@mui/private-theming';\r\nimport TextareaAutosize from '@mui/base/TextareaAutosize';\r\n\r\nconst StoryGameInProgressScreen = (props) => {\r\n    console.log(SocketContext);\r\n    // const socket = useContext(SocketContext);\r\n    // let saveHandler = (text, done) => {\r\n    //     socket.emit(\"saveText\", text);\r\n    // }\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n              main: '#6A8D92',\r\n            },\r\n            secondary: {\r\n              main: '#9FB4C7',\r\n            }\r\n        },\r\n      });\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"false\" maxHeight=\"lg\">\r\n                <CssBaseline />\r\n                <Box\r\n                sx={{\r\n                    marginTop:15,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                }}\r\n                >\r\n                    <Box>\r\n                        <Typography mb={2} align=\"center\" variant=\"h4\"> Time left: 30S </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\"> Previous Panel </Typography>\r\n                        <Box noValidate sx={{ border:2, borderColor:\"black\", height:\"60vh\", width:\"40vw\"}}>\r\n                            {\"Sometimes when I get lonely, I think to myself. Why are we really here? Is it to satisfy ourselves? Our greeds? Our desires? Or is it \\\r\n                            to justify something else, something bigger, something beyond you or me? Perhaps we exist to satisfy the will of our ancestors. But what \\\r\n                            gave them the right to choose my existence?\"}\r\n                        </Box>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography mb={2} align=\"center\" variant=\"h4\"> Round 1/n </Typography>\r\n                        <Typography align=\"center\" variant=\"h4\"> Current Panel </Typography>\r\n                        <Box id=\"painterro\" class=\"pa\" noValidate sx={{bgcolor:\"secondary.main\", border:2, borderColor:\"black\"}}>\r\n                        {/* <TextField placeholder=\"MultiLine with rows: 2 and rowsMax: 4\" multiline style={{height:'100%', width:'100%'}}/> */}\r\n                            {/* <input type=\"text\" style={{height:'100%', width:'100%'}}/> */}\r\n                            <TextareaAutosize\r\n                            rows={40}\r\n                            maxRows={40}\r\n                            aria-label=\"maximum height\"\r\n                            style={{ width:'100%', height:'100%' }}\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n    </ThemeProvider>\r\n  </div>\r\n      );\r\n}\r\n\r\nexport default StoryGameInProgressScreen","import React from 'react';\r\nimport { useContext, useState } from 'react'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Settings from '@mui/icons-material/Settings';\r\nimport Logout from '@mui/icons-material/Logout';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport AutoStoriesIcon from '@mui/icons-material/AutoStories';\r\n\r\nimport { styled, alpha} from '@mui/material/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { \r\n    AppBar, Box, Toolbar, IconButton, Typography, \r\n    InputBase, MenuItem, Menu, Tooltip, Avatar, \r\n    Button,ToggleButton, ToggleButtonGroup, ListItemIcon,\r\n} from '@mui/material';\r\n\r\n\r\n    // Button that has logo and routes to the homepage\r\n    const HomeButton = () => {\r\n        let history = useHistory();\r\n        return (\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"secondary\" \r\n            onClick={() => history.push('/')}\r\n            startIcon={<HomeIcon />}\r\n            size=\"large\"\r\n        >\r\n            <Typography>DERIT</Typography>\r\n        </Button>\r\n        );\r\n    };\r\n\r\n    const LoginButton = () => {\r\n        let history = useHistory();\r\n        return(\r\n        <>\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"secondary\" \r\n            onClick={() => history.push('/login')}\r\n            startIcon={<LoginIcon />}\r\n            size=\"large\"\r\n        >\r\n        Login\r\n        </Button>\r\n        </>\r\n        )\r\n    }\r\n\r\n    // Switch between comic/story site\r\n    const SiteToggle = () => {\r\n        const [alignment, setAlignment] = React.useState('comic');\r\n        const handleChange = (event, newAlignment) => {\r\n            if(newAlignment !== null) {\r\n                setAlignment(newAlignment);\r\n            }\r\n        };\r\n        return (\r\n        <ToggleButtonGroup \r\n            exclusive \r\n            onChange={handleChange}\r\n            value={alignment}\r\n            sx = {{\r\n                px: 2\r\n            }}\r\n        >\r\n            <ToggleButton color=\"secondary\" value=\"comic\">\r\n                <ColorLensIcon />\r\n                <Typography><strong>Comic</strong></Typography>\r\n            </ToggleButton>\r\n            <ToggleButton color=\"secondary\" value=\"story\">\r\n                <AutoStoriesIcon />\r\n                <Typography><strong>Story</strong></Typography>\r\n            </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        );\r\n    };\r\n\r\n    \r\n      \r\n    // TODO route text to search\r\n    const SearchBar = () => {\r\n        let history = useHistory();\r\n\r\n        const handleKeyPress = (event) => {\r\n            if (event.code === \"Enter\") {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                // Pass off to the search handler.\r\n                //store.handleSearch(event.target.value); // TODO- this is how we did it in 316 using the store, we'll see if we still need to.\r\n    \r\n                // todo - do better checking this is lazy and error prone.\r\n                if (event.target.value.indexOf(\",\") === -1 && event.target.value.substring(0, 2) === \"u:\") {\r\n                    // singular user search\r\n                    history.push(\"/search_user\");\r\n                }\r\n                else {\r\n                    history.push(\"/search\");\r\n                }\r\n                \r\n            }\r\n        }\r\n        // search components from mui documentation\r\n        const Search = styled('div')(({ theme }) => ({\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n                '&:hover': {\r\n                    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n                },\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(3),\r\n                width: 'auto',\r\n            },\r\n        }));\r\n\r\n        const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            color: 'background.main'\r\n        }));\r\n\r\n        const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n            color: 'secondary', '& .MuiInputBase-input': {\r\n                padding: theme.spacing(1, 1, 1, 0),\r\n                // vertical padding + font size from searchIcon\r\n                paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n                transition: theme.transitions.create('width'),\r\n                width: '100%',\r\n                [theme.breakpoints.up('md')]: {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        }));\r\n\r\n        return (\r\n            <Search>\r\n              <SearchIconWrapper>\r\n                <SearchIcon style={{color: \"#EEEFF\"}}/>\r\n              </SearchIconWrapper>\r\n              <StyledInputBase\r\n                placeholder=\"Search DERIT\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n            </Search>\r\n        );\r\n    };\r\n\r\n    // Contains menu dropdown and routes for\r\n    // View Profile, Account Settings, Logout\r\n    // TODO handle the logout and newGame route \r\n    const AccountDropdown = ({loggedIn, setLoggedIn}) => {\r\n        let history = useHistory();\r\n        const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n        const handleOpenUserMenu = (event) => {\r\n            setAnchorElUser(event.currentTarget);\r\n        };\r\n\r\n        // closes the menu or routes to a new page\r\n        const handleMenuClick = (pageURL) => {\r\n            // closes the menu\r\n            setAnchorElUser(null);\r\n            // routes to a new page\r\n            console.log(pageURL);\r\n            history.push(pageURL);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Tooltip title=\"Account Settings\">\r\n                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                        <Avatar alt=\"Gorilla Mckilla\" fontsize=\"small\"/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n                <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"user-menu\"\r\n                anchorEl={anchorElUser}\r\n                open={Boolean(anchorElUser)}\r\n                onClose={() => setAnchorElUser(null)}\r\n                getContentAnchorEl={null}\r\n                  transformOrigin={{ horizontal: 'left', vertical: 'top' }}\r\n                  anchorOrigin={{ horizontal: 'left', vertical: 'Bottom' }}\r\n                >\r\n                    <MenuItem onClick={() => handleMenuClick('/profile')}>\r\n                        <ListItemIcon>\r\n                            <Avatar sx={{ height: '25px', width: '25px' }}/>\r\n                        </ListItemIcon>\r\n                        Profile\r\n                    </MenuItem>\r\n                    \r\n                    <MenuItem onClick={() => handleMenuClick('/account')}>\r\n                        <ListItemIcon>\r\n                            <Settings fontsize=\"small\" />\r\n                        </ListItemIcon>\r\n                        Account Settings\r\n                    </MenuItem>\r\n\r\n                    <MenuItem onClick={() => handleMenuClick('/create')}>\r\n                        <ListItemIcon>\r\n                            <AddIcon fontsize=\"small\" />\r\n                        </ListItemIcon>\r\n                        Create Game\r\n                    </MenuItem>\r\n                    \r\n                    <MenuItem onClick={() => {\r\n                        setLoggedIn(false);\r\n                        handleMenuClick('/login');\r\n                        }}>\r\n                        <ListItemIcon>\r\n                            <Logout fontsize=\"small\" />\r\n                        </ListItemIcon>\r\n                        Logout\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    };\r\n  \r\n    // Searching, site toggle, New Game, and logging in/out\r\n    // aren't connected to actions\r\n    const HeaderBar = (props) => {\r\n\r\n    // this should be changed to reflect the state later\r\n    const [loggedIn, setLoggedIn] = useState(true);\r\n\r\n    return (\r\n    <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <Box display='flex' flexGrow={1} sx = {{\r\n\r\n            }}>\r\n                <HomeButton />\r\n                <SearchBar/>\r\n            </Box>\r\n\r\n            <Box display='flex' sx={{\r\n                justifyContent: 'flex-end',\r\n                padding: 1.5,\r\n                height: '100%',\r\n            }}>\r\n                <SiteToggle />\r\n                {loggedIn ? <AccountDropdown loggedIn={loggedIn} setLoggedIn={setLoggedIn}/> : <LoginButton/>}\r\n            </Box>\r\n        </Toolbar>\r\n    </AppBar>\r\n\r\n    );\r\n    }\r\n\r\nexport default HeaderBar;","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Grid } from '@mui/material';\r\nimport PublishedGameCard from './PublishedGameCard';\r\n\r\n\r\n// TODO add following functionality\r\nconst FollowButton = ({isFollowing, setIsFollowing}) => {\r\n    let follow_text = \"\";\r\n    if(isFollowing) {\r\n        follow_text = \"Unfollow\";\r\n    }\r\n    else {\r\n        follow_text = \"Follow\";\r\n    }\r\n    return (\r\n        <>\r\n        <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            sx={{\r\n                px: 5\r\n            }}\r\n            onClick={()=>{\r\n                setIsFollowing(!isFollowing);\r\n            }}\r\n        >{follow_text}</Button>\r\n        </>\r\n    );\r\n};\r\n\r\n// Component for the profile page\r\n// Displays profile information for a user\r\n// Profile Name\r\n// Completed Games\r\n// Follow/Unfollow user button\r\n// (follow button only appears if the viewer is not the user)\r\nconst Profile = (props) => {\r\n    // viwer is who is viewing the profile\r\n    // user is whose profile is being displayed\r\n    //const {viewer, user} = props;\r\n    let user = \"McKilla Gorilla\";\r\n\r\n    // if the viewer is following the user\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n    // if the viewer is the user\r\n    let isOwner = false;\r\n\r\n    // implement a list of cards of completed games\r\n    const publishedGames = [\r\n        {\r\n            creator:\"McKilla Gorilla\",\r\n            gameID : \"JYGS\",\r\n            panels: [\r\n                [\"/images/1.png\", \"/images/2.png\", \"/images/3.png\", \"/images/4.png\"],\r\n                [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n            ],\r\n            communityVotes: [\r\n                [\"npc1\", \"npc2\"],\r\n                []\r\n            ],\r\n            comments: [\r\n                {\r\n                  user:\"user1\",\r\n                  message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user2\",\r\n                  message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user3\",\r\n                  message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user4\",\r\n                  message:\"I hope one day I can see something as beautiful as this again. I can't believe something as amazing as this exists!\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user5\",\r\n                  message:\"I hope the user above me has a good day\",\r\n                  postDate:new Date()\r\n                },\r\n            ],\r\n            tags : [\"Unbelievable\", \"Pokemon\", \"Digimon\", \"War\"]\r\n        },\r\n        {\r\n            creator:\"McKilla Gorilla\",\r\n            gameID : \"KUGB\",\r\n            panels: [\r\n                [\"/images/mark_oukan_crown7_blue.png\", \"/images/4.png\", \"/images/4.png\", \"/images/4.png\"],\r\n                [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n            ],\r\n            communityVotes: [\r\n                [],\r\n                []\r\n            ],\r\n            comments: [\r\n                {\r\n                  user:\"user1\",\r\n                  message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user2\",\r\n                  message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n                  postDate:new Date()\r\n                },\r\n                {\r\n                  user:\"user3\",\r\n                  message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n                  postDate:new Date()\r\n                }\r\n            ],\r\n            tags : [\"NewPlayer\", \"Crown\"]\r\n        }\r\n    ];\r\n\r\n    return (\r\n    <>\r\n    <Grid \r\n        container \r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"baseline\"\r\n        sx = {{\r\n            gap: 2\r\n        }}\r\n    >\r\n        <Grid item pb={2}>\r\n            <Typography variant=\"h2\">{user}'s Profile</Typography>\r\n        </Grid>\r\n    </Grid>\r\n\r\n    <Grid \r\n        container \r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"baseline\"\r\n        sx = {{\r\n            px: 4\r\n        }}\r\n    >\r\n        {isOwner ? null : <FollowButton isFollowing={isFollowing} setIsFollowing={setIsFollowing}/>}\r\n    </Grid>\r\n\r\n        \r\n    <Typography variant=\"h3\">Completed Games</Typography>\r\n    <Grid container>\r\n        {publishedGames.map(({creator, tags, communityVotes, comments, panels}) => (\r\n            <PublishedGameCard creator={creator} tags={tags} votes={communityVotes} comments={comments} panels={panels}/>\r\n        ))}\r\n    </Grid> \r\n    </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import { useContext, useState } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction AlertModal(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        console.log(\"handle close called\");\r\n        setOpen(false);\r\n    };\r\n    let name = \"\";\r\n    let errorMessage = \"\";\r\n    if(store){\r\n        errorMessage = store.errorMessage;\r\n        if(errorMessage !== null && !open){\r\n            handleOpen();\r\n        }\r\n    }\r\n    if(name !== \"\" && open !== true){\r\n        handleOpen();\r\n    }\r\n    \r\n    function handleCloseModal(event) {\r\n        event.stopPropagation();\r\n        store.setErrorMessage(null);\r\n        handleClose();\r\n    }\r\n    const style = {\r\n        display: \"flex\",\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n      };\r\n    return (\r\n        <div>\r\n            <Modal\r\n            open = {open}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n            >\r\n            <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" align=\"center\" width='100%'>\r\n                {errorMessage}\r\n                <Box style={{  justifyContent: \"space-between\", position: \"relative\"}}>\r\n                <Button variant=\"contained\" onClick={handleCloseModal} align=\"right\">Ok</Button>\r\n                </Box>\r\n                </Typography>\r\n                \r\n            </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlertModal;","import { useContext } from 'react';\r\nimport AuthContext from '../auth'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { GlobalStoreContext } from '../store'\r\nimport Container from '@mui/material/Container';\r\nimport AlertModal from './AlertModal'\r\nimport { useState } from 'react'\r\n\r\nconst LoginScreen = () => {\r\n    const { auth } = useContext(AuthContext);\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    const [state, setState] = useState(\"normalLogin\");\r\n\r\n\r\n    const handleLoginSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.currentTarget);\r\n        auth.loginUser({\r\n            email: formData.get('email'),\r\n            password: formData.get('password'),\r\n        }, store);\r\n    };\r\n\r\n    const handleEmailSubmit = (event) => {\r\n      event.preventDefault();\r\n      const formData = new FormData(event.currentTarget);\r\n      auth.getUserSecurityQuestion({\r\n          email: formData.get('email'),\r\n      }, setState, store);\r\n  };\r\n\r\n  const handleResetPassword = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.currentTarget);\r\n    auth.resetPassword({\r\n      email: state.email,\r\n      newPassword: formData.get('password'),\r\n      newPasswordVerify: formData.get('passwordVerify'),\r\n      securityAnswer: formData.get('securityAnswer')\r\n  }, setState, store);\r\n};\r\n\r\n  \r\n    function normalLogin(){\r\n      return (\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n              <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Box component=\"form\" onSubmit={handleLoginSubmit} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address or User Name\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2, backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                  <Link component=\"button\" variant=\"body2\" onClick={()=>{\r\n                      setState(\"enterEmail\");\r\n                      }}>\r\n                      {\"Forgot password?\"}\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link href=\"/register/\" variant=\"body2\">\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n            <AlertModal></AlertModal>\r\n          </Container>)\r\n    }\r\n\r\n    function enterEmail(){\r\n      return (\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n              <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Enter Account Email\r\n              </Typography>\r\n              <Box component=\"form\" onSubmit={handleEmailSubmit} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2, backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}}\r\n                >\r\n                  Continue\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n            <AlertModal></AlertModal>\r\n          </Container>)\r\n    }\r\n\r\n\r\n    function resetPassword(){\r\n      return(\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n          <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography alignContent=\"center\" component=\"h1\" variant=\"h5\">\r\n            {\"Your security Question: \" + state.securityQuestion}\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleResetPassword} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"securityAnswer\"\r\n              label=\"Answer\"\r\n              name=\"securityAnswer\"\r\n              autoComplete=\"securityAnswer\"\r\n              autoFocus\r\n            />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"New Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"passwordVerify\"\r\n                    label=\"New Password Verify\"\r\n                    type=\"password\"\r\n                    id=\"passwordVerify\"\r\n                    autoComplete=\"new-password\"\r\n                />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <AlertModal></AlertModal>\r\n      </Container>\r\n    )\r\n      \r\n    }\r\n\r\n    function render(){\r\n      if(state === \"normalLogin\"){\r\n        return normalLogin();\r\n      }\r\n      else if(state === \"enterEmail\"){\r\n        return enterEmail();\r\n      }\r\n      else{\r\n        return resetPassword();\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      render()\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import { useContext } from 'react';\r\nimport AuthContext from '../auth'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { GlobalStoreContext } from '../store'\r\nimport AlertModal from './AlertModal'\r\n\r\nconst RegisterScreen = () =>{\r\n    const { auth } = useContext(AuthContext);\r\n    const { store } = useContext(GlobalStoreContext)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.currentTarget);\r\n        auth.registerUser({\r\n            email: formData.get('email'),\r\n            password: formData.get('password'),\r\n            passwordVerify: formData.get('passwordVerify'),\r\n            username: formData.get('username'),\r\n            securityQuestion: formData.get('securityQuestion'),\r\n            securityAnswer: formData.get('securityAnswer')\r\n        }, store);\r\n    };\r\n\r\n    return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"User Name\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"user name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"passwordVerify\"\r\n                                    label=\"Password Verify\"\r\n                                    type=\"password\"\r\n                                    id=\"passwordVerify\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"securityQuestion\"\r\n                                    label=\"Security Question (For password recovery)\"\r\n                                    type=\"securityQuestion\"\r\n                                    id=\"securityQuestion\"\r\n                                    autoComplete=\"security-question\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"securityAnswer\"\r\n                                    label=\"Security Answer (For password recovery)\"\r\n                                    type=\"securityAnswer\"\r\n                                    id=\"securityAnswer\"\r\n                                    autoComplete=\"security-answer\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2, backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/login/\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <AlertModal></AlertModal>\r\n            </Container>\r\n    );\r\n}\r\nexport default RegisterScreen;","import { Avatar, Box, Button, Container, Grid } from '@mui/material';\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\nimport React from 'react'\r\n\r\nconst StoryCard = ({content, winner}) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\" columnSpacing={4} mt={5}>\r\n        <Grid item xs={1}>\r\n            {winner ? <img width=\"100%\" src=\"/images/mark_oukan_crown7_blue.png\" alt=\"commVoteCrown\"></img> : ''}\r\n        </Grid>\r\n        <Grid item xs={6} className=\"slider\">\r\n            <SimpleImageSlider width={600} height={280} showBullets={true} showNavs={true} images={content} style={{marginLeft:\"10%\"}}/>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n            <Button variant=\"outlined\" size=\"large\" startIcon={<Avatar src={\"/images/heart_blur.png\"}></Avatar>}>Vote</Button>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default StoryCard\r\n","import { Avatar, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\r\n\r\nimport React from 'react'\r\n\r\nconst GameComment = ({user, message, postDate}) => {\r\n  return (\r\n    <Box mb={4}>\r\n      <Container style={{backgroundColor:\"white\", width:\"70%\", borderRadius:\"20px\"}}>\r\n        <Typography variant=\"h6\" align='left' style={{color:\"#4b4e6d\", textDecoration:\"underline\"}} pt={2} ml={4} mr={2}>\r\n            {user}:\r\n        </Typography>\r\n        <Typography variant=\"body1\" align='left' style={{color:\"#4b4e6d\"}} pt={1} ml={4} mr={2}>\r\n          {message}\r\n        </Typography>\r\n        <Typography variant=\"body1\" align='right' style={{color:\"#4b4e6d\"}} pt={1} pb={2} mr={2}>\r\n          Posted: {(postDate.getMonth() + 1) + \"/\" + postDate.getDate() + \"/\" + postDate.getFullYear()}\r\n        </Typography>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default GameComment\r\n","import { Avatar, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\r\n\r\nimport { color, fontWeight } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react'\r\nimport StoryCard from './StoryCard';\r\nimport GameComment from './GameComment';\r\n\r\nconst GameResult = () => {\r\n  const [playerWinner, setPlayerWinner] = useState(-1);\r\n  const [commWinner, setCommWinner] = useState(-1);\r\n\r\n  //Hard coded example data\r\n  const panels=[\r\n    [\"/images/1.png\", \"/images/2.png\", \"/images/3.png\", \"/images/4.png\"],\r\n    [\"/images/1.png\", \"/images/1.png\", \"/images/1.png\", \"/images/1.png\"]\r\n  ];\r\n\r\n  const communityVotes=[\r\n    [\"npc1\", \"npc2\"],\r\n    []\r\n  ];\r\n\r\n  const comments=[\r\n    {\r\n      user:\"user1\",\r\n      message:\"WOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH I can't believe what i'm seeing this reminds me of this one scene from another series. This made me want to go back and reread that series again.\",\r\n      postDate:new Date()\r\n    },\r\n    {\r\n      user:\"user2\",\r\n      message:\"Wow, this was the best thing I've ever seen in my life. I will never be the same. 10 out of 10, would recommend.\",\r\n      postDate:new Date()\r\n    },\r\n    {\r\n      user:\"user3\",\r\n      message:\"This was my favorite part! I've looked at this for over  5 hours and can't get it out my head!\",\r\n      postDate:new Date()\r\n    },\r\n    {\r\n      user:\"user4\",\r\n      message:\"I hope one day I can see something as beautiful as this again. I can't believe something as amazing as this exists!\",\r\n      postDate:new Date()\r\n    },\r\n    {\r\n      user:\"user5\",\r\n      message:\"I hope the user above me has a good day\",\r\n      postDate:new Date()\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    let max = -1;\r\n    let win = -1;\r\n\r\n    for(let i = 0; i < communityVotes.length; i++)\r\n    {\r\n      if(communityVotes[i].length > max){\r\n        max = communityVotes[i].length;\r\n        win = i;\r\n      }\r\n    }\r\n\r\n    setCommWinner(win);\r\n    console.log(commWinner);\r\n  });\r\n\r\n  return (\r\n    <div className='back'>\r\n      <Box textAlign='center' mt={5} className=\"Game\" >\r\n        <Button variant=\"outlined\" style={{backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"bold\"}} size=\"large\">\r\n          Play Again\r\n        </Button>\r\n\r\n        <>\r\n          {panels.map((story, index) => (\r\n            <StoryCard content={story} winner={commWinner==index}/>\r\n          ))}\r\n        </>\r\n      </Box>\r\n\r\n      <Box mt={8} className=\"Comments\" pb={5}>\r\n        <Typography variant=\"h2\" align=\"center\" style={{color:\"#4b4e6d\", textDecoration:\"underline\"}} mb={4} mt={3}>\r\n            Comments\r\n        </Typography>\r\n\r\n        <Container id=\"comment-space\" style={{width:\"72%\"}}>\r\n          <TextField id=\"comment\" variant=\"filled\" fullWidth multiline label=\"Add a comment\" ></TextField>\r\n          <Grid container justifyContent=\"right\">\r\n            <Grid item mt={2} mb={4}>\r\n              <Button style={{backgroundColor:\"#4b4e6d\", color:\"white\", fontWeight:\"600\"}}>Comment</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n        {comments.map(({user, message, postDate}) => (\r\n          <GameComment user={user} message={message} postDate={postDate}/>\r\n        ))}\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameResult;\r\n","import './App.css';\r\nimport { React } from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { AuthContextProvider } from './auth';\r\nimport {\r\n    Paint,\r\n    CreateGame,\r\n    GameLobby,\r\n    SearchResults,\r\n    SearchResultsUser,\r\n    AccountScreen,\r\n    HomeScreen,\r\n    ComicGameInProgressScreen,\r\n    StoryGameInProgressScreen,\r\n    HeaderBar,\r\n    Profile,\r\n    LoginScreen,\r\n    RegisterScreen\r\n  \r\n} from \"./components\";\r\nimport GameResult from './components/GameResult';\r\nimport { SocketContext, socket} from \"./context/socket\";\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { GlobalStoreContextProvider } from './store';\r\nimport { CssBaseline } from '@mui/material';\r\n\r\n\r\nconst App = () => {\r\n    console.log(socket);\r\n    console.log(SocketContext);\r\n\r\n    // applies the theme to all components\r\n    // we can potentialyl add other themes later\r\n    const default_theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n              main: '#6A8D92',\r\n            },\r\n            secondary: {\r\n              main: '#9FB4C7',\r\n            },\r\n            background: {\r\n                default: '#EEEFF',\r\n            }\r\n        },\r\n      });\r\n\r\n    return (\r\n        <ThemeProvider theme={default_theme}>\r\n        <CssBaseline />\r\n        <BrowserRouter>\r\n            <AuthContextProvider>\r\n                <GlobalStoreContextProvider>\r\n                    <SocketContext.Provider value={socket}>\r\n                        <HeaderBar />\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={HomeScreen} />\r\n                            <Route path=\"/account\" exact component={AccountScreen} />\r\n                            <Route path=\"/profile\" exact component={Profile} />\r\n                            <Route path=\"/CGameInProgress/:id\" exact component={ComicGameInProgressScreen} />\r\n                            <Route path=\"/SGameInProgress/:id\" exact component={StoryGameInProgressScreen} />\r\n                            <Route path=\"/paint\" exact component={Paint} />\r\n                            <Route path=\"/login/\" exact component={LoginScreen} />\r\n                            <Route path=\"/register/\" exact component={RegisterScreen} />\r\n                            <Route path=\"/gameResult/:id\" exact component={GameResult}/>\r\n                            <Route path=\"/lobby\" exact component={GameLobby} />\r\n                            <Route path=\"/create\" exact component={CreateGame} />\r\n                            <Route path=\"/search\" exact component={SearchResults} />\r\n                            <Route path=\"/search_user\" exact component={SearchResultsUser} />\r\n                        </Switch>\r\n                        </SocketContext.Provider>\r\n                    </GlobalStoreContextProvider>\r\n            </AuthContextProvider>\r\n        </BrowserRouter>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>  \r\n      <App />\r\n      \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}